# Script d'installation MongoDB Server pour Windows
# Usage: PowerShell -ExecutionPolicy Bypass -File install-mongodb-server.ps1

Write-Host "üóÉÔ∏è Installation MongoDB Server pour Windows" -ForegroundColor Yellow
Write-Host "=============================================" -ForegroundColor Yellow

# V√©rifier si MongoDB Server est d√©j√† install√©
$mongoServerPaths = @(
    "C:\Program Files\MongoDB\Server\*\bin\mongod.exe",
    "C:\MongoDB\Server\*\bin\mongod.exe"
)

$existingMongo = $false
foreach ($path in $mongoServerPaths) {
    $resolved = Resolve-Path $path -ErrorAction SilentlyContinue
    if ($resolved) {
        $existingMongo = $true
        Write-Host "‚úÖ MongoDB Server d√©j√† install√©: $($resolved.Path)" -ForegroundColor Green
        break
    }
}

if ($existingMongo) {
    Write-Host "üîÑ V√©rification du service..." -ForegroundColor Cyan
    
    $service = Get-Service "MongoDB" -ErrorAction SilentlyContinue
    if ($service) {
        if ($service.Status -eq "Running") {
            Write-Host "‚úÖ Service MongoDB d√©j√† d√©marr√©" -ForegroundColor Green
        } else {
            Write-Host "üîß D√©marrage du service MongoDB..." -ForegroundColor Yellow
            try {
                Start-Service "MongoDB"
                Write-Host "‚úÖ Service MongoDB d√©marr√© avec succ√®s" -ForegroundColor Green
            } catch {
                Write-Host "‚ùå Erreur d√©marrage service: $_" -ForegroundColor Red
            }
        }
    }
} else {
    Write-Host "üîç MongoDB Server non trouv√©. Installation n√©cessaire..." -ForegroundColor Yellow
    
    # V√©rifier si Chocolatey est disponible
    if (Get-Command choco -ErrorAction SilentlyContinue) {
        Write-Host "‚úÖ Chocolatey trouv√©. Installation via choco..." -ForegroundColor Green
        
        try {
            Write-Host "üì¶ Installation de MongoDB Server..." -ForegroundColor Cyan
            choco install mongodb -y
            
            Write-Host "üîÑ D√©marrage du service MongoDB..." -ForegroundColor Cyan
            Start-Sleep -Seconds 5
            Start-Service "MongoDB" -ErrorAction SilentlyContinue
            
            Write-Host "‚úÖ MongoDB Server install√© et d√©marr√©!" -ForegroundColor Green
            
        } catch {
            Write-Host "‚ùå Erreur installation via Chocolatey: $_" -ForegroundColor Red
            $manualInstall = $true
        }
        
    } else {
        Write-Host "‚ö†Ô∏è Chocolatey non trouv√©. Installation manuelle requise." -ForegroundColor Yellow
        $manualInstall = $true
    }
    
    if ($manualInstall) {
        Write-Host "`nüìã Instructions d'installation manuelle:" -ForegroundColor Yellow
        Write-Host "=========================================" -ForegroundColor Yellow
        Write-Host "1. üåê Allez sur: https://www.mongodb.com/try/download/community" -ForegroundColor White
        Write-Host "2. üéØ S√©lectionnez:" -ForegroundColor White
        Write-Host "   - Version: Latest (7.0 ou plus r√©cent)" -ForegroundColor Gray
        Write-Host "   - Platform: Windows" -ForegroundColor Gray  
        Write-Host "   - Package: msi (pas zip)" -ForegroundColor Gray
        Write-Host "3. üì• T√©l√©chargez et installez le fichier .msi" -ForegroundColor White
        Write-Host "4. ‚öôÔ∏è Durant l'installation:" -ForegroundColor White
        Write-Host "   - Cochez 'Install MongoDB as a Service'" -ForegroundColor Gray
        Write-Host "   - Cochez 'Install MongoDB Compass' (optionnel)" -ForegroundColor Gray
        Write-Host "5. üîÑ Apr√®s installation, red√©marrez ce script" -ForegroundColor White
        
        Write-Host "`nüí° Installation rapide Chocolatey:" -ForegroundColor Cyan
        Write-Host "Si vous voulez installer Chocolatey d'abord:" -ForegroundColor White
        Write-Host 'Set-ExecutionPolicy Bypass -Scope Process -Force; [System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor 3072; iex ((New-Object System.Net.WebClient).DownloadString("https://community.chocolatey.org/install.ps1"))' -ForegroundColor Gray
        Write-Host "Puis relancez ce script." -ForegroundColor White
    }
}

# Test final
Write-Host "`nüß™ Test de l'installation:" -ForegroundColor Cyan
$service = Get-Service "MongoDB" -ErrorAction SilentlyContinue
if ($service -and $service.Status -eq "Running") {
    Write-Host "‚úÖ Service MongoDB: $($service.Status)" -ForegroundColor Green
    
    # Test de connectivit√©
    try {
        $connection = Test-NetConnection -ComputerName "localhost" -Port 27017 -InformationLevel Quiet -WarningAction SilentlyContinue
        if ($connection) {
            Write-Host "‚úÖ Port 27017 accessible" -ForegroundColor Green
            Write-Host "üéâ MongoDB Server pr√™t pour Anomalya Corp!" -ForegroundColor Green
        } else {
            Write-Host "‚ö†Ô∏è Port 27017 non accessible - V√©rifiez la configuration" -ForegroundColor Yellow
        }
    } catch {
        Write-Host "‚ö†Ô∏è Test de connectivit√© √©chou√©" -ForegroundColor Yellow
    }
} else {
    Write-Host "‚ùå Service MongoDB non d√©marr√©" -ForegroundColor Red
    Write-Host "üí° Essayez de d√©marrer manuellement:" -ForegroundColor Yellow
    Write-Host "   - Ouvrez Services (services.msc)" -ForegroundColor Gray
    Write-Host "   - Cherchez 'MongoDB' et d√©marrez le service" -ForegroundColor Gray
}

Write-Host "`n‚úÖ Script termin√©" -ForegroundColor Green
Write-Host "üîÑ Relancez le diagnostic: .\diagnose-windows.ps1" -ForegroundColor Cyan